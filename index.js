var command = "sendir,4:1,1,37000,4,1,32,32,32,32,32,32,64,32,32,32,32,32,32,161,32,32,32,64,32,32,64,32,32,32,32,32,32,32,32,32,32,32,32,64,32,2731,32,32,32,32,32,32,64,32,32,32,32,32,32,161,32,32,32,64,32,32,64,32,32,32,32,32,32,32,32,32,32,32,32,64,32,1200";
var command = "sendir,4:1,2,37000,4,1,32,32,32,32,32,32,64,32,32,32,32,32,32,161,32,32,32,64,32,32,64,32,32,32,32,32,32,32,32,32,32,64,64,2731,32,32,32,32,32,32,64,32,32,32,32,32,32,161,32,32,32,64,32,32,64,32,32,32,32,32,32,32,32,32,32,64,64,1200";
var command = "sendir,4:2,5,39000,1,1,348,173,21,22,21,65,21,65,21,65,21,22,21,65,21,65,21,65,21,65,21,65,21,65,21,22,21,22,21,22,21,22,21,65,21,65,21,65,21,22,21,22,21,22,21,22,21,22,21,22,21,22,21,65,21,65,21,22,21,22,21,22,21,65,21,23,21,1560,347,87,21,3702,347,87,21,3702,347,87,21,3702,347,87,21,3846";


// Sample Marantz SR8001 IR Commands:
// stereo_on = 'sendir,4:1,1,37000,4,1,32,32,32,32,32,32,64,32,32,32,32,32,32,161,32,32,32,64,32,32,64,32,32,32,32,32,32,32,32,32,32,32,32,64,32,2731,32,32,32,32,32,32,64,32,32,32,32,32,32,161,32,32,32,64,32,32,64,32,32,32,32,32,32,32,32,32,32,32,32,64,32,1200';
// stereo_off = 'sendir,4:1,2,37000,4,1,32,32,32,32,32,32,64,32,32,32,32,32,32,161,32,32,32,64,32,32,64,32,32,32,32,32,32,32,32,32,32,64,64,2731,32,32,32,32,32,32,64,32,32,32,32,32,32,161,32,32,32,64,32,32,64,32,32,32,32,32,32,32,32,32,32,64,64,1200';

// Sample Apple TV 2.0 Commands
// atv_menu = 'sendir,4:2,5,39000,1,1,348,173,21,22,21,65,21,65,21,65,21,22,21,65,21,65,21,65,21,65,21,65,21,65,21,22,21,22,21,22,21,22,21,65,21,65,21,65,21,22,21,22,21,22,21,22,21,22,21,22,21,22,21,65,21,65,21,22,21,22,21,22,21,65,21,23,21,1560,347,87,21,3702,347,87,21,3702,347,87,21,3702,347,87,21,3846';
// atv_play_pause = 'sendir,4:2,6,39000,1,1,348,173,21,22,21,65,21,65,21,65,21,22,21,65,21,65,21,65,21,65,21,65,21,65,21,22,21,22,21,22,21,22,21,65,21,65,21,65,21,65,21,65,21,65,21,22,21,65,21,22,21,22,21,65,21,65,21,22,21,22,21,22,21,65,21,23,21,1393,347,173,21,22,21,65,21,65,21,65,21,22,21,65,21,65,21,65,21,65,21,65,21,65,21,22,21,22,21,22,21,22,21,65,21,65,21,22,21,65,21,22,21,22,21,22,21,22,21,22,21,22,21,65,21,65,21,22,21,22,21,22,21,65,21,23,21,1558,347,87,21,3702,347,87,21,3702,347,87,21,3846';
// atv_enter = 'sendir,4:2,8,39000,1,1,348,173,21,22,21,65,21,65,21,65,21,22,21,65,21,65,21,65,21,65,21,65,21,65,21,22,21,22,21,22,21,22,21,65,21,22,21,22,21,65,21,65,21,65,21,22,21,65,21,22,21,22,21,65,21,65,21,22,21,22,21,22,21,65,21,23,21,1480,347,173,21,22,21,65,21,65,21,65,21,22,21,65,21,65,21,65,21,65,21,65,21,65,21,22,21,22,21,22,21,22,21,65,21,65,21,22,21,65,21,22,21,22,21,22,21,22,21,22,21,22,21,65,21,65,21,22,21,22,21,22,21,65,21,23,21,1559,347,87,21,3703,347,87,21,3702,347,87,21,3846';
// atv_right = 'sendir,4:2,9,39000,1,1,348,173,21,22,21,65,21,65,21,65,21,22,21,65,21,65,21,65,21,65,21,65,21,65,21,22,21,22,21,22,21,22,21,65,21,22,21,65,21,65,21,22,21,22,21,22,21,22,21,22,21,22,21,65,21,65,21,22,21,22,21,22,21,65,21,23,21,1559,347,87,21,3701,347,87,21,3702,347,87,21,3701,347,87,21,3846';
// atv_left = 'sendir,4:2,10,39000,1,1,348,173,21,22,21,65,21,65,21,65,21,22,21,65,21,65,21,65,21,65,21,65,21,65,21,22,21,22,21,22,21,22,21,65,21,65,21,22,21,22,21,65,21,22,21,22,21,22,21,22,21,22,21,65,21,65,21,22,21,22,21,22,21,65,21,23,21,1558,347,87,21,3701,347,87,21,3701,347,87,21,3701,347,87,21,3846';
// atv_up = 'sendir,4:2,12,39000,1,1,348,173,21,22,21,65,21,65,21,65,21,22,21,65,21,65,21,65,21,65,21,65,21,65,21,22,21,22,21,22,21,22,21,65,21,22,21,65,21,22,21,65,21,22,21,22,21,22,21,22,21,22,21,65,21,65,21,22,21,22,21,22,21,65,21,23,21,1559,347,87,21,3701,347,87,21,3701,347,87,21,3701,347,87,21,3846';
// atv_down = 'sendir,4:2,14,39000,1,1,348,173,21,22,21,65,21,65,21,65,21,22,21,65,21,65,21,65,21,65,21,65,21,65,21,22,21,22,21,22,21,22,21,65,21,22,21,22,21,65,21,65,21,22,21,22,21,22,21,22,21,22,21,65,21,65,21,22,21,22,21,22,21,65,21,23,21,1560,347,87,21,3702,347,87,21,3702,347,87,21,3702,347,87,21,3846';

// Sample Panasonic TH-42PWD8UK RS232 commands
// tv_on = 'PON';
// tv_off = 'POF';
// $rs232_in = pack("H*" ,'02'.bin2hex($rs232_in).'03');


var net = require('net');

var HOST = '10.0.1.155';
var IR_PORT = 4998;
var RS232_PORT = 4999;

var ir_client = new net.Socket();
var rs232_client = new net.Socket();

ir_client.connect(IR_PORT, HOST, function(){
    console.log('CONNECTED TO: ' + HOST + ':' + IR_PORT);
    // Write a message to the socket as soon as the client is connected, the server will receive it as message from the client 
    ir_client.write(command+"\r");
});

// Add a 'data' event handler for the client socket
// data is what the server sent to this socket
ir_client.on('data', function(data) {
    
    console.log('DATA: ' + data);
    // Close the client socket completely
    ir_client.destroy();
    
});

// Add a 'close' event handler for the client socket
ir_client.on('close', function() {
    console.log('Connection closed');
});


var socket = net.createConnection(IR_PORT, HOST);
console.log('Socket '+IR_PORT+':'+HOST+' created.');
socket.on('data', function(data) {
  // Log the response from the server.
  console.log('RESPONSE: ' + data);
	ir_client.destroy();
}).on('connect', function() {
  // Manually write an HTTP request.
  socket.write(command+"\r");
}).on('close', function(){
  console.log('DONE');
});
